{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alan\\\\Desktop\\\\React-projects\\\\react-hooks\\\\src\\\\pages\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // try with rendering ul and tables from a STATE\n  let [names, setNames] = useState([50, 100]);\n  return (\n    /*#__PURE__*/\n    // aqui o nclick não recebeu nada, mas se eu quisesse, poderia passar o parametro Evento, que\n    // simboliza tudo relacionado aos eventos daquele botão. Assim como SetState pode ou não receber um prevValue\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          //1\n          //test takes the prevValues (an array) and for each item, it multiple for 3, and then it must be spread.\n          //setNames( prevValue => [...prevValue, ...(test(prevValue))] ) // 2 and 3\n          console.log(names);\n        },\n        children: \"Click ME!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"UUwDEMApRkgIJd4ssERMXro/J+0=\");\n\n_c = App;\n;\nexport default App;\n/*\n\nsetNames is a function to change the state\nsetNames((prevValue) => prevValue + 3 ) // it musts receive the old value if is inside a function to alter the old value.\nif you want to \"append\" the old value along, there is a trick:\n\nsetnames([ ...prevValue,(prevValue) => prevValue + 3 ])\n\n*/\n//setNames are the way i have to change and interact with names.\n//formulario receives setNames, cuz its whos responsible for updating our State, our data!\n// onClick must always receive a arrow function (1)\n// if you want to manipulate a previous value, setNames also need a arrow funciont (2)\n//since its a list we're dealing with, we need a map function to alter each value (3)\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","names","setNames","console","log"],"sources":["C:/Users/Alan/Desktop/React-projects/react-hooks/src/pages/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\n\nfunction App() {\n// try with rendering ul and tables from a STATE\nlet [names, setNames] = useState([50, 100])\n \n  return (\n    // aqui o nclick não recebeu nada, mas se eu quisesse, poderia passar o parametro Evento, que\n    // simboliza tudo relacionado aos eventos daquele botão. Assim como SetState pode ou não receber um prevValue\n    <div className=\"App\">\n      <button onClick={ () => { //1\n                              //test takes the prevValues (an array) and for each item, it multiple for 3, and then it must be spread.\n        //setNames( prevValue => [...prevValue, ...(test(prevValue))] ) // 2 and 3\n        \n        console.log(names)\n\n\n      }} \n        >Click ME!</button>\n    </div>\n  )};\nexport default App;\n\n\n/*\n\nsetNames is a function to change the state\nsetNames((prevValue) => prevValue + 3 ) // it musts receive the old value if is inside a function to alter the old value.\nif you want to \"append\" the old value along, there is a trick:\n\nsetnames([ ...prevValue,(prevValue) => prevValue + 3 ])\n\n*/\n//setNames are the way i have to change and interact with names.\n    //formulario receives setNames, cuz its whos responsible for updating our State, our data!\n// onClick must always receive a arrow function (1)\n// if you want to manipulate a previous value, setNames also need a arrow funciont (2)\n//since its a list we're dealing with, we need a map function to alter each value (3)"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACf;EACA,IAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAC,EAAD,EAAK,GAAL,CAAD,CAAhC;EAEE;IAAA;IACE;IACA;IACA;MAAK,SAAS,EAAC,KAAf;MAAA,uBACE;QAAQ,OAAO,EAAG,MAAM;UAAE;UACF;UACtB;UAEAI,OAAO,CAACC,GAAR,CAAYH,KAAZ;QAGD,CAPD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAHF;AAcE;;GAlBKD,G;;KAAAA,G;AAkBL;AACJ,eAAeA,GAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA"},"metadata":{},"sourceType":"module"}