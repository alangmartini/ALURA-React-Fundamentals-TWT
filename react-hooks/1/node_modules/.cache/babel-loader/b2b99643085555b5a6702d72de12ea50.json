{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alan\\\\Desktop\\\\React-projects\\\\react-hooks\\\\src\\\\components\\\\Formulario\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Formulario(props) {\n  _s();\n\n  let [inputContent, setInputContent] = useState({\n    Model: '',\n    Licenseplate: ''\n  });\n  return (\n    /*#__PURE__*/\n    // if is written props, it will get the property from the parent component. simply as that.\n    _jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault(); // this communicates with State in app.tsx. Thus prevValue (to get the previous objects of the Array) plus the object to insert from here.\n\n        props.setNames(prevValue => [...prevValue, inputContent]);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          //both inputs communicate with this State. The idea is to give the input to state, and make the Form take it later\n          setInputContent({ ...inputContent,\n            Model: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setInputContent({ ...inputContent,\n            Licenseplate: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Formulario, \"ZOifQ7XFenLFBZTeZ50P+JyAcyw=\");\n\n_c = Formulario;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"names":["React","useState","Formulario","props","inputContent","setInputContent","Model","Licenseplate","e","preventDefault","setNames","prevValue","target","value"],"sources":["C:/Users/Alan/Desktop/React-projects/react-hooks/src/components/Formulario/index.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport IInfos from \"../../types\";\r\n\r\nexport default function Formulario(props: any){\r\n\r\n    let [inputContent, setInputContent] = useState(\r\n        {\r\n        Model: '',\r\n        Licenseplate: ''\r\n        \r\n        }\r\n)\r\n\r\n    return(\r\n// if is written props, it will get the property from the parent component. simply as that.\r\n        <form \r\n        onSubmit={(e) => {\r\n            e.preventDefault()\r\n            // this communicates with State in app.tsx. Thus prevValue (to get the previous objects of the Array) plus the object to insert from here.\r\n            props.setNames( (prevValue: IInfos[]) => [...prevValue, inputContent ])\r\n            \r\n        }}>\r\n            \r\n            <input onChange={(e) => {\r\n                //both inputs communicate with this State. The idea is to give the input to state, and make the Form take it later\r\n                setInputContent({ ...inputContent, Model: e.target.value})\r\n            }}/>\r\n\r\n            <input onChange={(e) => {\r\n                setInputContent({...inputContent, Licenseplate: e.target.value})\r\n            }}\r\n            />\r\n            <button type='submit'>Adicionar</button>\r\n        </form>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAGA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA+B;EAAA;;EAE1C,IAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAC1C;IACAK,KAAK,EAAE,EADP;IAEAC,YAAY,EAAE;EAFd,CAD0C,CAA9C;EAQA;IAAA;IACJ;IACQ;MACA,QAAQ,EAAGC,CAAD,IAAO;QACbA,CAAC,CAACC,cAAF,GADa,CAEb;;QACAN,KAAK,CAACO,QAAN,CAAiBC,SAAD,IAAyB,CAAC,GAAGA,SAAJ,EAAeP,YAAf,CAAzC;MAEH,CAND;MAAA,wBAQI;QAAO,QAAQ,EAAGI,CAAD,IAAO;UACpB;UACAH,eAAe,CAAC,EAAE,GAAGD,YAAL;YAAmBE,KAAK,EAAEE,CAAC,CAACI,MAAF,CAASC;UAAnC,CAAD,CAAf;QACH;MAHD;QAAA;QAAA;QAAA;MAAA,QARJ,eAaI;QAAO,QAAQ,EAAGL,CAAD,IAAO;UACpBH,eAAe,CAAC,EAAC,GAAGD,YAAJ;YAAkBG,YAAY,EAAEC,CAAC,CAACI,MAAF,CAASC;UAAzC,CAAD,CAAf;QACH;MAFD;QAAA;QAAA;QAAA;MAAA,QAbJ,eAiBI;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;AAsBH;;GAhCuBX,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}