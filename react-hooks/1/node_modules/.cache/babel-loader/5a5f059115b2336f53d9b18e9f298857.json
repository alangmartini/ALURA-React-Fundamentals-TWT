{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alan\\\\Desktop\\\\React-projects\\\\react-hooks\\\\1\\\\src\\\\components\\\\Lista\\\\index.tsx\";\nimport React from \"react\";\nimport Item from \"./Item\";\nimport styles from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lista(_ref) {\n  let {\n    names,\n    selecionaTarefa,\n    setNames\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.listWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: names.map(item => {\n        return /*#__PURE__*/_jsxDEV(Item, {\n          names: names,\n          setNames: setNames,\n          selecionaTarefa: selecionaTarefa,\n          Model: item.Model,\n          Licenseplate: item.Licenseplate,\n          Entrada: item.Entrada,\n          Selecionado: item.Selecionado,\n          Id: item.Id,\n          Completado: item.Completado // instead of putting model to Completado, another options is sending a spread:\n          // {...item}, which means, for each item o object, send Item={Item}\n\n        }, item.Id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_c = Lista;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lista\");","map":{"version":3,"names":["React","Item","styles","Lista","names","selecionaTarefa","setNames","listWrapper","map","item","Model","Licenseplate","Entrada","Selecionado","Id","Completado"],"sources":["C:/Users/Alan/Desktop/React-projects/react-hooks/1/src/components/Lista/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport IInfos from \"../../types/Infos\";\r\nimport Item from \"./Item\";\r\nimport styles from './style.module.scss'\r\n\r\ninterface Props{\r\n    names: IInfos[],\r\n    selecionaTarefa: (infoSelecionado: IInfos) => void\r\n    setNames: React.Dispatch<React.SetStateAction<IInfos[]>>\r\n}\r\nexport default function Lista(\r\n\r\n    {names, selecionaTarefa, setNames}: Props\r\n\r\n    ){\r\n    return(\r\n        <div className={styles.listWrapper}>\r\n            <ul>\r\n                {names.map( (item): JSX.Element => {\r\n                    return (\r\n                        <Item\r\n                            names={names}\r\n                            setNames={setNames}\r\n                            selecionaTarefa={selecionaTarefa}\r\n                            key={item.Id}\r\n                            Model={item.Model}\r\n                            Licenseplate={item.Licenseplate}\r\n                            Entrada={item.Entrada}\r\n                            Selecionado={item.Selecionado}\r\n                            Id={item.Id}\r\n                            Completado={item.Completado}\r\n                            // instead of putting model to Completado, another options is sending a spread:\r\n                            // {...item}, which means, for each item o object, send Item={Item}\r\n                            \r\n                            \r\n                            />\r\n                            \r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAOA,eAAe,SAASC,KAAT,OAIV;EAAA,IAFD;IAACC,KAAD;IAAQC,eAAR;IAAyBC;EAAzB,CAEC;EACD,oBACI;IAAK,SAAS,EAAEJ,MAAM,CAACK,WAAvB;IAAA,uBACI;MAAA,UACKH,KAAK,CAACI,GAAN,CAAYC,IAAD,IAAuB;QAC/B,oBACI,QAAC,IAAD;UACI,KAAK,EAAEL,KADX;UAEI,QAAQ,EAAEE,QAFd;UAGI,eAAe,EAAED,eAHrB;UAKI,KAAK,EAAEI,IAAI,CAACC,KALhB;UAMI,YAAY,EAAED,IAAI,CAACE,YANvB;UAOI,OAAO,EAAEF,IAAI,CAACG,OAPlB;UAQI,WAAW,EAAEH,IAAI,CAACI,WARtB;UASI,EAAE,EAAEJ,IAAI,CAACK,EATb;UAUI,UAAU,EAAEL,IAAI,CAACM,UAVrB,CAWI;UACA;;QAZJ,GAISN,IAAI,CAACK,EAJd;UAAA;UAAA;UAAA;QAAA,QADJ;MAmBH,CApBA;IADL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA4BH;KAjCuBX,K"},"metadata":{},"sourceType":"module"}