{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alan\\\\Desktop\\\\React-projects\\\\react-hooks\\\\src\\\\components\\\\Formulario\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Formulario(props) {\n  _s();\n\n  let [inputContent, setInputContent] = useState({\n    Model: '',\n    Licenseplate: '',\n    Entrada: ''\n  });\n  return (\n    /*#__PURE__*/\n    // if is written props, it will get the property from the parent component. simply as that.\n    _jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault(); // this communicates with State in app.tsx. Thus prevValue (to get the previous objects of the Array) plus the object to insert from here.\n\n        props.setNames(prevValue => [...prevValue, inputContent]);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Insert your Model\",\n        onChange: e => {\n          //both inputs communicate with this State. The idea is to give the input to state, and make the Form take it later\n          setInputContent({ ...inputContent,\n            Model: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Insert your license plate\",\n        onChange: e => {\n          ;\n          setInputContent({ ...inputContent,\n            Licenseplate: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => {\n          setInputContent({ ...inputContent,\n            Entrada: new Date().setHours.toString()\n          });\n        },\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Formulario, \"B2vYG893ZIGu6l7eCSwY/bYeIC8=\");\n\n_c = Formulario;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"names":["React","useState","Formulario","props","inputContent","setInputContent","Model","Licenseplate","Entrada","e","preventDefault","setNames","prevValue","target","value","Date","setHours","toString"],"sources":["C:/Users/Alan/Desktop/React-projects/react-hooks/src/components/Formulario/index.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport IInfos from \"../../types\";\r\n\r\nexport default function Formulario(props: any){\r\n\r\n    let [inputContent, setInputContent] = useState(\r\n        {\r\n        Model: '',\r\n        Licenseplate: '',\r\n        Entrada: '',\r\n        }\r\n)\r\n\r\n    return(\r\n// if is written props, it will get the property from the parent component. simply as that.\r\n        <form \r\n        onSubmit={(e) => {\r\n            \r\n            e.preventDefault()\r\n            // this communicates with State in app.tsx. Thus prevValue (to get the previous objects of the Array) plus the object to insert from here.\r\n            props.setNames( (prevValue: IInfos[]) => [...prevValue, inputContent ])\r\n            \r\n        }}>\r\n            \r\n            <input \r\n            placeholder=\"Insert your Model\"\r\n            onChange={(e) => {\r\n                //both inputs communicate with this State. The idea is to give the input to state, and make the Form take it later\r\n                setInputContent({ ...inputContent, Model: e.target.value})\r\n            }}/>\r\n            <br />\r\n            <input \r\n            placeholder=\"Insert your license plate\"\r\n            onChange={(e) => {\r\n                ;\r\n                setInputContent({...inputContent, Licenseplate: e.target.value});\r\n                \r\n            }}\r\n            />\r\n            <br />\r\n            <button type='submit'\r\n                onClick={() =>{\r\n                    setInputContent({ ...inputContent, Entrada: new Date().setHours.toString() })\r\n                }}\r\n            >Adicionar</button>\r\n        </form>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAGA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA+B;EAAA;;EAE1C,IAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAC1C;IACAK,KAAK,EAAE,EADP;IAEAC,YAAY,EAAE,EAFd;IAGAC,OAAO,EAAE;EAHT,CAD0C,CAA9C;EAQA;IAAA;IACJ;IACQ;MACA,QAAQ,EAAGC,CAAD,IAAO;QAEbA,CAAC,CAACC,cAAF,GAFa,CAGb;;QACAP,KAAK,CAACQ,QAAN,CAAiBC,SAAD,IAAyB,CAAC,GAAGA,SAAJ,EAAeR,YAAf,CAAzC;MAEH,CAPD;MAAA,wBASI;QACA,WAAW,EAAC,mBADZ;QAEA,QAAQ,EAAGK,CAAD,IAAO;UACb;UACAJ,eAAe,CAAC,EAAE,GAAGD,YAAL;YAAmBE,KAAK,EAAEG,CAAC,CAACI,MAAF,CAASC;UAAnC,CAAD,CAAf;QACH;MALD;QAAA;QAAA;QAAA;MAAA,QATJ,eAeI;QAAA;QAAA;QAAA;MAAA,QAfJ,eAgBI;QACA,WAAW,EAAC,2BADZ;QAEA,QAAQ,EAAGL,CAAD,IAAO;UACb;UACAJ,eAAe,CAAC,EAAC,GAAGD,YAAJ;YAAkBG,YAAY,EAAEE,CAAC,CAACI,MAAF,CAASC;UAAzC,CAAD,CAAf;QAEH;MAND;QAAA;QAAA;QAAA;MAAA,QAhBJ,eAwBI;QAAA;QAAA;QAAA;MAAA,QAxBJ,eAyBI;QAAQ,IAAI,EAAC,QAAb;QACI,OAAO,EAAE,MAAK;UACVT,eAAe,CAAC,EAAE,GAAGD,YAAL;YAAmBI,OAAO,EAAE,IAAIO,IAAJ,GAAWC,QAAX,CAAoBC,QAApB;UAA5B,CAAD,CAAf;QACH,CAHL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAzBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;AAkCH;;GA5CuBf,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}